name: build-windows
on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - "**/*.md"
  pull_request:
    paths-ignore:
      - "**/*.md"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        node-version: [18]
        os: [windows-2019]
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}-node-${{ matrix.node-version }}

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Install dependencies
        run: npm i
      
      - name: Get version from package.json
        id: get_version
        run: |
          echo "::set-output name=version::$(node -p "require('./package.json').version")"
      
      - name: Publish releases
        env:
          # These values are used for auto updates signing
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_ID_PASS }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm run electron:windows

      - uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GH_TOKEN }}'
          automatic_release_tag: 'latest'
          prerelease: false
          title: 'Release ${{ steps.get_version.outputs.version }}'
          files: |
            ./release/*.exe
